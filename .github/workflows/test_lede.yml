name: x86_64 lede test

on:
  # repository_dispatch:
  workflow_dispatch:

jobs:
  Lede-master:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt -y purge azure-cli dotnet* firefox ghc* google* llvm* mono* mysql* openjdk* php* zulu* powershell* msodbc* android*
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
          libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
          libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
          python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    - name: Clone Source
      run: |
        cd "/home/runner"
        git clone https://github.com/coolsnowwolf/lede
        sudo chown -R runner:runner "lede"
        cd "/home/runner/lede"
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        rm -rf feeds/packages/lang/golang
        svn export https://github.com/sbwml/packages_lang_golang/branches/19.x feeds/packages/lang/golang
    - name: Build ImmortalWrt-21.02
      run: |
        cd "/home/runner/lede"
        cp -f "${GITHUB_WORKSPACE}/test_lede" ".config"
        make defconfig
        make -j1 V=s
        ls -al bin/targets/x86/64
